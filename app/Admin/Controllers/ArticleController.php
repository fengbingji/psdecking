<?php

namespace App\Admin\Controllers;

use App\Admin\Repositories\Article;
use App\Admin\RowActions\Copy;
use App\Enums\ContentType;
use App\Models\Category;
use Dcat\Admin\Admin;
use Dcat\Admin\Form;
use Dcat\Admin\Grid;
use Dcat\Admin\Http\Controllers\AdminController;
use Dcat\Admin\Layout\Content;

class ArticleController extends AdminController
{
    protected $title = 'Blog';

    //    public function index(Content $content)
    //    {
    //        $content->breadcrumb($this->title);
    //
    //        return parent::index($content); // TODO: Change the autogenerated stub
    //    }

    //    public function create(Content $content)
    //    {
    //        $content->breadcrumb($this->title, \route('dcat.admin.article.index', \request('p_cate_id')));
    //        $content->breadcrumb(__('admin.create'));
    //
    //        return parent::create($content); // TODO: Change the autogenerated stub
    //    }

    //    public function edit($id, Content $content)
    //    {
    //        $content->breadcrumb($this->title, \route('dcat.admin.article.index', \request('p_cate_id')));
    //        $content->breadcrumb(__('admin.edit'));
    //        $id = request()->route()->parameter('article');
    //
    //        return parent::edit($id, $content); // TODO: Change the autogenerated stub
    //    }

    //    public function update($id)
    //    {
    //        $id = request()->route()->parameter('article');
    //
    //        return parent::update($id); // TODO: Change the autogenerated stub
    //    }

    //    public function destroy($id)
    //    {
    //        $id = request()->route()->parameter('article');
    //
    //        return parent::destroy($id); // TODO: Change the autogenerated stub
    //    }

    /**
     * Make a grid builder.
     *
     * @return Grid
     */
    protected function grid()
    {
        return Grid::make(new Article(['category']), function (Grid $grid) {
            $grid->column('id')->sortable();
            $grid->column('title');
            $grid->column('category.name', admin_trans('category'));
            $grid->column('tags')->label('primary', 3);
            $grid->column('flags')->switch();
            $grid->column('published')->using(['未发布', '已发布'])->dot(['#ccc', 'info']);
            $grid->column('locale', '语言')
                ->using(array_column(config('project.supported_locales'), 'name', 'lang'))
                ->filter(Grid\Column\Filter\In::make(array_column(config('project.supported_locales'), 'name', 'lang')));
            $grid->column('created_at')->sortable();

            $grid->filter(function (Grid\Filter $filter) {
                $filter->equal('id');
            });

            $grid->model()->orderByDesc('id');

            $grid->actions(function (Grid\Displayers\Actions $actions) {
                $actions->append(new Copy(\App\Models\Article::class));
            });
        });
    }

    /**
     * Make a form builder.
     *
     * @return Form
     */
    protected function form()
    {
        return Form::make(new Article, function (Form $form) {
            $form->display('id');
            $form->text('title')->required();
            $form->text('short_title');
            $form->select('category_id', trans('category'))
                ->required()
                ->options(Category::selectOptions(function (Category $query) {
                    return $query->where('content_type', ContentType::Article);
                }, rootText: '请选择'))
                ->rules('gt:1', ['gt' => '请选择分类']);
            $form->tags('tags')->options(config('project.news_tags'));
            $form->image('cover')
                ->move('article')
                ->removable()
                ->maxSize(1024 * 3)
                ->uniqueName()
                ->cover(300, 300)
                ->autoUpload()
                ->help('最大上传3m');
            $form->textarea('description')->rows(2);
            $form->text('keywords');
            // $form->text('author');
            $form->switch('flags')->help('推荐内容会在详情页侧栏显示');
            $form->switch('published')->default(1);
            $form->display('hits');
            $form->editor('content');
            $form->radio('locale', '语言')
                ->options(array_column(config('project.supported_locales'), 'name', 'lang'))
                ->default(config('project.supported_locales')[config('project.default_locale')]['lang'])
                ->required();
            $form->hidden('editor_id')->default(Admin::user()->id);

            $form->display('created_at');
            $form->display('updated_at');

            if ($form->isEditing()) {
                $form->tools(function (Form\Tools $tools) use ($form) {
                    $tools->append('<div class="btn-group pull-right" style="margin-right: 5px">
    <a href="/'.$form->model()->lang.'/news/'.$form->model()->id.'.html" target="_blank" class="btn btn-sm btn-primary "><i class="feather icon-eye"></i><span class="d-none d-sm-inline">&nbsp;预览</span></a>
</div>');
                });
            }
        });
    }
}
